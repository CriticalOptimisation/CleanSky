within EU_CleanSky.EDS.Utilities.HierarchicalConnection.Aircraft.Internal;
record RootFinder
  "Overdetermined connector syntax forces translator to choose a Root"

  function equalityConstraint
    input RootFinder v1;
    input RootFinder v2;
    output Real residue[0] "No constraints";
  algorithm
  end equalityConstraint;
  annotation (Documentation(info="<html>
<p>Even though it is empty, this record formally complies with the Modelica definition of an overdetermined record. It will be added to ordinary physical connectors from the Modelica Standard Library in order to associate a Root finding mechanism to them. The resulting connector type will be used in the Hierarchical Connector (HC) implementation in place of the standard connector type, but the Proxy components will convert back to standard connectors.</p>
<p>Modelica does not like floating potentials. Unfortunately in all the connectors of the HC which are not used, there is usually at last one potential variable (for instance the voltage of a Pin connector). Because the interface is unused, this potential variable has an undetermined value. Most Modelica tools will detect that it is not used in the model, and will remove it, but they will then think that they have an extra equation in some cases, and that will create confusion with users. Tools handle and isolated connector in the following fashion: after they have created the default no flow equations for the unconnected connectors, they find out that the potential variable does not appear in an equation at all, and they remove it from the problem. This operation leaves the tool with a flow variable and a zero-flow equation derived from the absence of connection. Unfortunately when two isolated connectors are linked together, for instance when a lone proxy is abandoned in a diagram, the tool finds a connect equation which applies to the potential variables. For simple cases with 4 variables, the tool has one equation for the two potential variables, and often three equations for the flow variables: one connect, and two zero-flow conditions. The importance of solving properly this problem derives from the fact that in the HC library, Subsystems count as Proxies as well, since just like Proxies they can be dropped in a diagram and will automatically be connected through the hierachical connector. While lone abandoned proxies will be located at translate time and can be removed, the same cannot be done for Subsystems.</p>
<p>Frame being an overdetermined connector, the Roots are in the components of the HC/Aircraft package only when the connector is present in the HC, but unused, or connected only to proxies. For ordinary MSL connectors, the Root is always in the HC classes, and is always in one the interconnected Proxies, more precisely in the Plug component inside the Proxy. The Plug sets the boundary conditions, and normally defines a zero-flow condition. Proxies interconnected by the HC form a graph, more exactly a tree with N connectors and N-1 connections. This is a simplified view because typical proxies contain 2 connectors for each connector in the HC, plus one which is extracted to the interface. The graph is acyclic and can be interpreted as a tree if any connector is chosen as the Root.</p>
<p>In each Proxy for a given hierarchic connector, the internal connection set generates one flow equation, two potential equations, and one zero flow conditions at the plug. The unconnected Proxy generates a no-flow equation at the external interface. The connections to the HC generate a single flow equation and one potential equation per proxy. Overall with P proxies, we have 6P+2 unknowns, 3P+2 equations involving the flow variables and 3P equations involving the potential variables. So there is always one extra flow equation, which essentially says that the sum is zero, something we already know since we have equations saying that the flow for each Proxy is also zero, and one missing potential equation. Some libraries use the &QUOT;unassignedMessage&QUOT; annotation on the potential variable to give a meaningful message to the user. </p>
<p>The connector of the HC would be a natural center for that graph, but it cannot have equations because it is just a connector, so it&apos;s not useful as a Root. The RootFinder lets the translator pick a Root among the Plug components. Not exactly a Root but a Root-candidate. The Root-candidate will operate as a Root only if the Proxy is unconnected. The formula used to compute Root priority gives the highest priority to the Proxies having the largest number of connections. When, at the selected Root, the number of connections is zero, it means that in the whole group of interconnected Proxies, no one is connected anywhere. In this case, with a group of unused Proxies, the Root-candidate will act as a Root: instead of specifying a zero flow boundary condition, it specifies a zero potential boundary condition. One flow equation disappears and is replaced by a potential equation. This trick avoids nuisance error messages about unconnected proxies, since it allows all the potential flow variables to be assigned correctly.</p>
<p>We do not do it as soon as the group of proxy is connected somewhere because the potential we set, usually zero, is not related in any way to the problem the user wants to solve. Doing that trick would allow the Modelica tool to assign to all variables, and would disable the generation of warning messages from the library.</p>
<p>Summary: the RootFinder system sets the potential and makes a balanced system with groups of unconnected proxies (connected together via the HC), but remains competely transparent as soon as any proxy is connected to anything else. It a proxy is connected to an equipment where it should provide the ground electrical potential, the library for analog electrical systems will provide an error message saying that there is no ground, unless another interconnected proxy is linked to the ground component of the library.</p>
</html>"));
end RootFinder;
