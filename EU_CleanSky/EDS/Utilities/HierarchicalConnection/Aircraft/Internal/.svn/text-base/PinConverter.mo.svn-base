within EU_CleanSky.EDS.Utilities.HierarchicalConnection.Aircraft.Internal;
model PinConverter
  "Root finding pin to ordinary pin conversion and root equation."

  Modelica.Electrical.Analog.Interfaces.Pin pin annotation (Placement(
        transformation(extent={{-110,-10},{-90,10}}), iconTransformation(extent=
           {{-110,-10},{-90,10}})));
  Pin rootedPin
    "This connector marks the boundary of the rooted connection graph"             annotation (HideResult=true,
      Placement(transformation(extent={{90,-10},{110,10}}), iconTransformation(extent={{90,-10},{110,10}})));
  parameter Integer count=-1 "The cardinality measured at a relevant connector";
  parameter Integer card= if count>=0 then count else cardinality(pin);
equation
  // Select a root among the pinConverters with the lowest number of
  Connections.potentialRoot(rootedPin.root,-card);
  if Connections.isRoot(rootedPin.root) and card == 0 then
    // The whole connection graph is unused: the Pin was declared in the HC but is not yet in use.
    // Set the potential.
    rootedPin.v = 0;
    // Note that because nothing on the whole connection graph is connected, the tool can deduce that
    // 'rootedPin.i = 0' by substitution of all the 'i=0' boundary conditions at non-root PinConverters into
    // the flow equation generated by the 'connect' statements. In addition on the external side, a
    // 'pin.i = 0' equation will be generated since when cardinality(pin) = 0, pin is not externally connected.
  else
    // Normal boundary condition. In the Plug role, the unconnected external connector 'pin'
    // will cause a 'pin.i = 0' equation to be generated, therefore the expected 'rootedPin.i=0'
    // boundary condition also holds true.
    rootedPin.i + pin.i = 0;
  end if;
  // Potential equation
  rootedPin.v = pin.v;

  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
            {100,100}}), graphics={Rectangle(extent={{-100,26},{100,-26}},
            lineColor={0,0,255}), Rectangle(extent={{84,16},{116,-16}},
            lineColor={0,0,255})}), Documentation(info="<html>
<p>The PinConverter is used both to implement the <a href=\"modelica://EU_CleanSky.EDS.Utilities.HierarchicalConnection.Aircraft.Internal.Plug\">Plug</a> for electric pin connectors, and to convert back from <a href=\"modelica:// EU_CleanSky.EDS.Utilities.HierarchicalConnection.Aircraft.Internal.Pin\">rooted Pin</a> type to <a href=\"Modelica.Electrical.Analog.Interfaces.Pin\">Modelica.Electrical.Analog.Interfaces.Pin</a>. </p>
<p>In order to implement Plug, the pin connector is left unconnected externally. This guarantees that the cardinality of connections will be zero. These PinConverters cannot be chosen as Roots unless the whole connection graph is unused (it happens in a complex model hierarchy if a particular Pin connector of the HC is not used at all).</p>
<p>If the component is the Root and pin is unconnected, it means that Pin is not used. In that case, we locally implement at the Root a potential setting equation, rather than a zero-flow equation.</p>
</html>"));
end PinConverter;
